version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: mluser
      POSTGRES_PASSWORD: mlpass
      POSTGRES_DB: quora_moderation
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mlflow:
    build:
      context: .
      dockerfile: mlflow/Dockerfile.mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
      - ./data:/mlflow/data

  airflow:
    build:
      context: .                # build from project root
      dockerfile: Dockerfile.airflow
    depends_on:
      - postgres
      - minio
      - mlflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://mluser:mlpass@postgres:5432/quora_moderation
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      MINIO_ENDPOINT: http://minio:9000
      MINIO_USERNAME: minio
      MINIO_PASSWORD: minio123
      MINIO_BUCKET_NAME: embeddings
      MLFLOW_TRACKING_URI: http://mlflow:5000
      LOCAL_MODEL_PATH: /tmp/models
      MAX_LENGTH: "100"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - .:/opt/airflow/app        # Mount entire project so train_models.py can be imported
      - ./training/requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: bash -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && airflow scheduler & airflow webserver"

  minio:
    image: minio/minio
    container_name: minio 
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web Console
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  preprocess:
    build:
      context: .
      dockerfile: preprocessing/Dockerfile.preprocessing
    ports:
      - "5001:5001"
    depends_on:
      - minio

  api:
    build:
      context: .
      dockerfile: api/Dockerfile.api
    depends_on:
      - minio
      - preprocess
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_USERNAME: minio
      MINIO_PASSWORD: minio123
      MINIO_BUCKET_NAME: embeddings
      MAX_LENGTH: "100"
    ports:
      - "8000:8000"

volumes:
  minio_data:
  pgdata:
